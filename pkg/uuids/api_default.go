/*
 * uuid farm
 *
 * A farm for abandoned UUIDs
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package uuids

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{ service: s }
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{ 
		{
			"AdoptUUID",
			strings.ToUpper("Post"),
			"/v1/uuids",
			c.AdoptUUID,
		},
		{
			"GetFarm",
			strings.ToUpper("Get"),
			"/v1/",
			c.GetFarm,
		},
		{
			"GetUUID",
			strings.ToUpper("Get"),
			"/v1/uuids/{id}",
			c.GetUUID,
		},
		{
			"GetUUIDs",
			strings.ToUpper("Get"),
			"/v1/uuids",
			c.GetUUIDs,
		},
		{
			"SurrenderUUID",
			strings.ToUpper("Post"),
			"/v1/uuids/{id}",
			c.SurrenderUUID,
		},
		{
			"UpdateUUID",
			strings.ToUpper("Put"),
			"/v1/uuids/{id}",
			c.UpdateUUID,
		},
	}
}

// AdoptUUID - Adopt UUID
func (c *DefaultApiController) AdoptUUID(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.AdoptUUID()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil,  w)
}

// GetFarm - Get Farm Stats
func (c *DefaultApiController) GetFarm(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetFarm()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil,  w)
}

// GetUUID - Get UUID
func (c *DefaultApiController) GetUUID(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.GetUUID(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil,  w)
}

// GetUUIDs - Get UUIDs
func (c *DefaultApiController) GetUUIDs(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetUUIDs()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil,  w)
}

// SurrenderUUID - Surrender UUID
func (c *DefaultApiController) SurrenderUUID(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.SurrenderUUID(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil,  w)
}

// UpdateUUID - Update UUID
func (c *DefaultApiController) UpdateUUID(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	uuid := &Uuid{}
	if err := json.NewDecoder(r.Body).Decode(&uuid); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.UpdateUUID(id, *uuid)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil,  w)
}
