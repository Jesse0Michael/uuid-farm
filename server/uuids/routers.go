/*
 * uuid farm
 *
 * A farm for abandoned UUIDs
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package uuids

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

type RouteBinder interface {

	AdoptUUID() http.HandlerFunc
	GetFarm() http.HandlerFunc
	GetUUID() http.HandlerFunc
	GetUUIDs() http.HandlerFunc
	SurrenderUUID() http.HandlerFunc
	UpdateUUID() http.HandlerFunc
}

func NewRouter(binder RouteBinder) *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes(binder) {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func routes(binder RouteBinder) Routes {
	return Routes{
		

		{
			"AdoptUUID",
			strings.ToUpper("Post"),
			"/v1/uuids",
			binder.AdoptUUID,
		},

		{
			"GetFarm",
			strings.ToUpper("Get"),
			"/v1/",
			binder.GetFarm,
		},

		{
			"GetUUID",
			strings.ToUpper("Get"),
			"/v1/uuids/{id}",
			binder.GetUUID,
		},

		{
			"GetUUIDs",
			strings.ToUpper("Get"),
			"/v1/uuids",
			binder.GetUUIDs,
		},

		{
			"SurrenderUUID",
			strings.ToUpper("Post"),
			"/v1/uuids/{id}",
			binder.SurrenderUUID,
		},

		{
			"UpdateUUID",
			strings.ToUpper("Put"),
			"/v1/uuids/{id}",
			binder.UpdateUUID,
		},
	}
}
