{{>partial_header}}
package {{packageName}}

import (
	"net/http"
)

type Controller struct {
    service Servicer
}

func NewController(s *Servicer) RouteBinder {
    return &Controller{}
}

type Servicer interface { {{#operations}}{{#operation}}
    {{operationId}}() (interface{}, error){{/operation}}{{/operations}}
}

// move to separate file
type APIService struct {
}

func NewAPIService() Servicer {
    return &APIService{}
}{{#operations}}{{#operation}}

// {{nickname}} - {{{summary}}}
func (s *APIService) {{nickname}}() (interface{}, error) {
    return nil, nil
}{{/operation}}{{/operations}}
// -------{{#operations}}{{#operation}}

// {{nickname}} - {{{summary}}}
func (c *Controller) {{nickname}} (w http.ResponseWriter, r *http.Request) {

    result, err := c.service.{{nickname}}()
    if err != nil {
        w.WriteHeader(500)
        return
    }
	
    EncodeJSONResponse(result, nil,  w)
}{{/operation}}{{/operations}}
